{"mappings":"AAAA;;;;;;;;;;;;;CAaC,GACD,mEAAmE;AAEnE,iIAAiI;AACjI,MAAM,SAAS,MAAM,aAAa,CAAC,OAAO;IAAE,IAAI;AAAS,GAAG;IAC1D,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAQ,GAAG;QAC1C,iDAAiD;QACjD,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;IACD,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAS,GAAG;QAC3C,iDAAiD;QACjD,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;CACF;AAED,uCAAuC;AACvC,UAAU;AACV,uBAAuB;AACvB,8BAA8B;AAC9B,KAAK;AACL,qDAAqD;AACrD,mCAAmC;AACnC,QAAQ,GAAG,CAAC,UAAU;AACtB,MAAM,OAAO,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC;AACzD,8JAA8J;AAC9J,KAAK,MAAM,CAAC","sources":["App.js"],"sourcesContent":["/**\r\n * <div id='parent'>\r\n *      <div id='child'>\r\n *          <h1>I am an h1 tag</h1>\r\n *          <h2>I am an h2 tag</h2>\r\n *      </div>\r\n *   <div id='child2'>\r\n *          <h1>I am an h1 tag</h1>\r\n *          <h2>I am an h2 tag</h2>\r\n *      </div>\r\n * </div>\r\n *\r\n * React Element(object) => HTML(Browser Understands)\r\n */\r\n// Writing react this way is not a easy task that's why we need JSX\r\n\r\n// If we have multiple child for an React element or siblings than we can use Array and enclosed the child element in [] brackets\r\nconst parent = React.createElement(\"div\", { id: \"parent\" }, [\r\n  React.createElement(\"div\", { id: \"child\" }, [\r\n    // To create sibling we can pass array of element\r\n    React.createElement(\"h1\", {}, \"I am an h1 tag\"),\r\n    React.createElement(\"h2\", {}, \"I am an h2 tag\"),\r\n  ]),\r\n  React.createElement(\"div\", { id: \"child2\" }, [\r\n    // To create sibling we can pass array of element\r\n    React.createElement(\"h1\", {}, \"I am an h1 tag\"),\r\n    React.createElement(\"h2\", {}, \"I am an h2 tag\"),\r\n  ]),\r\n]);\r\n\r\n// const heading = React.createElement(\r\n//   \"h1\",\r\n//   { id: \"heading\" },\r\n//   \"Hello World from React!\"\r\n// );\r\n// // This will print a object which is react element\r\n// console.log(\"heading\", heading);\r\nconsole.log(\"parent\", parent);\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n// The job render function is to take this heading object which is react element and covert into browser understandable html h1 element and put it inside root\r\nroot.render(parent);\r\n"],"names":[],"version":3,"file":"index.6bd02f5a.js.map","sourceRoot":"/__parcel_source_root/"}